name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Mac Latest GCC",
            os: macos-latest,
            cc: "gcc",
            cxx: "g++"
          }
        - {
            name: "Mac Latest Clang",
            os: macos-latest,
            cc: "clang",
            cxx: "clang++",
            cmake-args: "-DCMAKE_OSX_ARCHITECTURES='arm64;x86_64'"
          }
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            cc: "gcc",
            cxx: "g++"
          }
        - {
            name: "Ubuntu Latest Clang",
            os: ubuntu-latest,
            cc: "clang",
            cxx: "clang++",
            cmake-args: "-DSPE_FUZZ=yes"
          }
        - {
            name: "Windows Latest arm64",
            os: windows-latest,
            cc: "cl",
            cxx: "cl",
            cmake-args: "-A ARM64"
          }
        - {
            name: "Windows Latest x86",
            os: windows-latest,
            cc: "cl",
            cxx: "cl",
            cmake-args: "-A x64"
          }
    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} ${{ matrix.config.cmake-args }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
